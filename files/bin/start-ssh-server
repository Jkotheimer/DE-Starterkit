#!/bin/sh

source pretty-script

if ! command -v openssl &> /dev/null; then
    _error "OpenSSL could not be found. Please install OpenSSL and try again."
fi

HOST_KEY_PATH=/etc/ssh/ssh_host_rsa_key
if [ ! -f $HOST_KEY_PATH ]; then
    _warn "Could not find host key. Generating a new one."
    sudo ssh-keygen -t rsa -b 4096 -f $HOST_KEY_PATH -N ""
fi

MASTER_KEY_NAME=ssh_master_rsa_key
MASTER_KEY_PATH=~/.ssh/${MASTER_KEY_NAME}
if [[ ! -f ${MASTER_KEY_PATH} || ! -f ${MASTER_KEY_PATH}.pub ]]; then
    _warn "Could not find master key. Generating a new one."
    while [ -z "$MASTER_KEY_PASSPHRASE" ]; do
        read -p 'Please enter a passphrase to secure the master key: ' MASTER_KEY_PASSPHRASE
    done
    ssh-keygen -t rsa -b 4096 -f $MASTER_KEY_PATH -N "$MASTER_KEY_PASSPHRASE"
fi

cat ${MASTER_KEY_PATH}.pub > ~/.ssh/authorized_keys

sudo mkdir -p /etc/ssh/locks
LOCK_FILE_NAME="$(echo "$MASTER_KEY_NAME" | md5sum - | sed 's/ .*//g').lock"
LOCK_FILE_PATH=/etc/ssh/locks/${LOCK_FILE_NAME}
if [ ! -f ${LOCK_FILE_PATH} ]; then
    _warn "Could not find a lock file for the master key. Generating a new one."
    while [ -z "$MASTER_KEY_PASSPHRASE" ]; do
        read -p 'Please enter a passphrase to secure the master key: ' MASTER_KEY_PASSPHRASE
    done
    echo "$MASTER_KEY_NAME-$(cat ${MASTER_KEY_PATH}.pub)" > temp.txt
    sudo openssl enc -aes-256-cbc -pbkdf2 -k "$MASTER_KEY_PASSPHRASE" -in temp.txt -out $LOCK_FILE_PATH -md md5
    rm temp.txt
fi

SSH_PORT=$((16#$(openssl rand -hex 2)))

_start "Starting SSH server on port ${SSH_PORT}"

cat << EOF > ./sshd_config
Banner /etc/issue

AllowUsers $USER
Port $SSH_PORT
HostKey $HOST_KEY_PATH

PermitRootLogin no
PasswordAuthentication no
AuthenticationMethods publickey

AuthorizedKeysFile ~/.ssh/authorized_keys ~/.ssh/authorized_keys2
EOF

sudo mv /etc/ssh/sshd_config /etc/ssh/sshd_config.old
sudo mv ./sshd_config /etc/ssh/sshd_config

sudo systemctl enable sshd > /dev/null
if sudo systemctl status sshd > /dev/null; then
    sudo systemctl restart sshd > /dev/null
else
    sudo systemctl start sshd > /dev/null
fi
STATUS=$?

_done

IP_ADDRESS=$(curl -s ifconfig.me)

echo
if [ $STATUS -eq 0 ]; then
    echo "SSH Server is running on port $SSH_PORT"
    echo "Connect to this server with the following command:"
    _echoc "ssh $USER@$IP_ADDRESS -p $SSH_PORT " $yellow
    echo "or, if you are connecting locally, run this command:"
    _echoc "ssh $USER@$HOSTNAME -p $SSH_PORT" $yellow
    echo
    exit 0
else
    echo "Failed to start the SSH server. See journalctl -xe for more info."
    echo
    exit 1
fi
